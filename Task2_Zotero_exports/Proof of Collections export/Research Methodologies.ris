TY  - CONF
TI  - Object Detection for Graphical User Interface: Old Fashioned or Deep Learning or a Combination?
AU  - Chen, Jieshan
AU  - Xie, Mulong
AU  - Xing, Zhenchang
AU  - Chen, Chunyang
AU  - Xu, Xiwei
AU  - Zhu, Liming
AU  - Li, Guoqiang
AB  - Detecting Graphical User Interface (GUI) elements in GUI images is a domain-specific object detection task. It supports many software engineering tasks, such as GUI animation and testing, GUI search and code generation. Existing studies for GUI element detection directly borrow the mature methods from computer vision (CV) domain, including old fashioned ones that rely on traditional image processing features (e.g., canny edge, contours), and deep learning models that learn to detect from large-scale GUI data. Unfortunately, these CV methods are not originally designed with the awareness of the unique characteristics of GUIs and GUI elements and the high localization accuracy of the GUI element detection task. We conduct the first large-scale empirical study of seven representative GUI element detection methods on over 50k GUI images to understand the capabilities, limitations and effective designs of these methods. This study not only sheds the light on the technical challenges to be addressed but also informs the design of new GUI element detection methods. We accordingly design a new GUI-specific old-fashioned method for non-text GUI element detection which adopts a novel top-down coarse-to-fine strategy, and incorporate it with the mature deep learning model for GUI text detection.Our evaluation on 25,000 GUI images shows that our method significantly advances the start-of-the-art performance in GUI element detection.
C3  - Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering
DA  - 2020/11/08/
PY  - 2020
DO  - 10.1145/3368089.3409691
DP  - arXiv.org
SP  - 1202
EP  - 1214
ST  - Object Detection for Graphical User Interface
UR  - http://arxiv.org/abs/2008.05132
Y2  - 2025/04/17/11:07:11
L2  - http://arxiv.org/abs/2008.05132
L4  - http://arxiv.org/pdf/2008.05132v2
N1  - <div data-schema-version="9"><p>The paper explores both traditional image processing and deep learning techniques, offering a well-balanced approach. It supports the rationale for using a mixed methods strategy in this research.</p>
</div>
KW  - GUI Automation
KW  - Hybrid Methodology
ER  - 

TY  - CONF
TI  - Autonomous GUI Testing using Deep Reinforcement Learning
AU  - Saber, Salma
AU  - Elbadry, Fatma
AU  - Negm, Hagar
AU  - El-Ershad, Rana Abu
AU  - Magdy, Omar
AU  - Bahnassawi, Mohamed
AU  - El Adawi, Reem
AU  - Bayoumi, AbdElMoniem
T2  - 2021 17th International Computer Engineering Conference (ICENCO)
AB  - Automating software testing looks forward to speeding up testing processes and ensuring possible replication of discovered software bugs. However, Automating the GUI testing process is highly challenging due to the need for human intervention to determine actions and assess outcomes. We introduce a novel approach to fully automate GUI testing using deep reinforcement learning. Our deep reinforcement learning model discovers all system states and determines possible testing sequences. The automated testing agent starts with exploring the tested environment to learn the most efficient paths for reaching maximum coverage while discovering GUI bugs. In this case, testers could focus more on functionality testing to improve the overall software quality. We evaluated the developed model on a couple of industry products, and it showed a substantial increase in coverage than random testing.
C3  - 2021 17th International Computer Engineering Conference (ICENCO)
DA  - 2021/12//
PY  - 2021
DO  - 10.1109/ICENCO49852.2021.9715282
DP  - IEEE Xplore
SP  - 94
EP  - 100
UR  - https://ieeexplore.ieee.org/document/9715282
Y2  - 2025/04/17/11:07:52
L2  - https://ieeexplore.ieee.org/document/9715282
N1  - <div data-schema-version="9"><p>This research adopts a reinforcement learning framework to automate GUI testing. The methodological rigour and focus on empirical validation are informative for designing structured experiments.</p>
</div>
KW  - Testing
KW  - Reinforcement Learning
KW  - Experimental Design
ER  - 

